{"version":3,"sources":["scripts/main.js"],"names":["board","score","ROWS","COLUMNS","arraysUpdatedBoard","gameFieldContainer","document","querySelector","startButton","restartButton","startGame","r","c","tile","createElement","id","toString","updateTile","append","num","innerText","classList","value","add","filterZero","row","filter","move","rOw","i","length","push","moveLeft","getElementById","moveRight","reverse","moveUp","moveDown","addTile","hasEmptyTile","arrayBoard","found","randomDigits","randomDigit","Math","floor","random","some","arr","style","display","youLose","notAddTile","booleanArr","penultimateArr","lastArr","every","youWin","columnsStrLines","columnsLines","rowsLines","x","y","split","ar","newArr","map","col","array","slice","doubleBoardsToSingleForComprassion","window","onload","onclick","remove","restartField","className","addEventListener","e","key"],"mappings":"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","file":"main.130535a2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet board;\nlet score = 0;\nconst ROWS = 4;\nconst COLUMNS = 4;\nlet arraysUpdatedBoard = [];\n\nconst gameFieldContainer = document.querySelector('.game-field-container');\nconst startButton = document.querySelector('.start');\nconst restartButton = document.querySelector('.restart');\n\nwindow.onload = function() {\n  startGame();\n};\n\nstartButton.onclick = () => {\n  startButton.style.display = 'none';\n  restartButton.style.display = 'block';\n  document.querySelector('.hidden-start').style.display = 'none';\n\n  addTile();\n  addTile();\n};\n\nrestartButton.onclick = () => {\n  score = 0;\n  document.querySelector('.game-score').innerText = 0;\n  document.querySelector('.hidden-lose').style.display = 'none';\n  document.querySelector('.hidden-start').style.display = 'none';\n\n  document.querySelector('.game-field').remove();\n\n  const restartField = document.createElement('div');\n\n  restartField.className = 'game-field';\n  gameFieldContainer.append(restartField);\n\n  startGame();\n  addTile();\n  addTile();\n};\n\nfunction startGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < ROWS; r++) {\n    for (let c = 0; c < COLUMNS; c++) {\n      const tile = document.createElement('div');\n\n      tile.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n      document.querySelector('.game-field').append(tile);\n    }\n  }\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('field-cell');\n\n  if (num > 0) {\n    tile.innerText = num.toString();\n\n    if (num <= 2048) {\n      tile.classList.add('field-cell--' + num.toString());\n    } else {\n      tile.classList.add('field-cell--2048');\n    }\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  switch (e.key) {\n    case 'ArrowUp':\n      if (!youWin()) {\n        moveUp();\n        doubleBoardsToSingleForComprassion();\n\n        if (!notAddTile()) {\n          addTile();\n        }\n      }\n      break;\n\n    case 'ArrowRight':\n      if (!youWin()) {\n        moveRight();\n        doubleBoardsToSingleForComprassion();\n\n        if (!notAddTile()) {\n          addTile();\n        }\n      }\n      break;\n\n    case 'ArrowDown':\n      if (!youWin()) {\n        moveDown();\n        doubleBoardsToSingleForComprassion();\n\n        if (!notAddTile()) {\n          addTile();\n        }\n      }\n      break;\n\n    case 'ArrowLeft':\n      if (!youWin()) {\n        moveLeft();\n        doubleBoardsToSingleForComprassion();\n\n        if (!notAddTile()) {\n          addTile();\n        }\n      }\n      break;\n  }\n\n  document.querySelector('.game-score').innerText = score;\n});\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction move(row) {\n  let rOw = row;\n\n  rOw = filterZero(rOw);\n\n  for (let i = 0; i < rOw.length - 1; i++) {\n    if (rOw[i] === rOw[i + 1]) {\n      rOw[i] *= 2;\n      rOw[i + 1] = 0;\n      score += rOw[i];\n    }\n  }\n  rOw = filterZero(rOw);\n\n  while (rOw.length < COLUMNS) {\n    rOw.push(0);\n  }\n\n  return rOw;\n}\n\nfunction moveLeft() {\n  for (let r = 0; r < ROWS; r++) {\n    let row = board[r];\n\n    row = move(row);\n    board[r] = row;\n\n    for (let c = 0; c < COLUMNS; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction moveRight() {\n  for (let r = 0; r < ROWS; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = move(row);\n    board[r] = row.reverse();\n\n    for (let c = 0; c < COLUMNS; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction moveUp() {\n  for (let c = 0; c < COLUMNS; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = move(row);\n\n    for (let r = 0; r < ROWS; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction moveDown() {\n  for (let c = 0; c < COLUMNS; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = move(row);\n    row.reverse();\n\n    for (let r = 0; r < ROWS; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction addTile() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  const arrayBoard = [];\n  let found = false;\n  const randomDigits = [2, 4];\n  const randomDigit\n    = randomDigits[Math.floor(Math.random() * randomDigits.length)];\n\n  while (!found) {\n    const r = Math.floor(Math.random() * ROWS);\n    const c = Math.floor(Math.random() * COLUMNS);\n\n    if (board[r][c] === 0) {\n      board[r][c] = randomDigit;\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      tile.innerText = randomDigit.toString();\n      tile.classList.add(`field-cell--${randomDigit}`);\n      found = true;\n    }\n  }\n\n  for (let r = 0; r < ROWS; r++) {\n    for (let c = 0; c < COLUMNS; c++) {\n      arrayBoard.push(board[r][c]);\n    }\n  }\n\n  arraysUpdatedBoard = [...arraysUpdatedBoard, [...arrayBoard]];\n\n  if (arrayBoard.some(arr => arr === 2048)) {\n    document.querySelector('.hidden-win').style.display = 'block';\n  }\n\n  if (youLose()) {\n    document.querySelector('.hidden-lose').style.display = 'block';\n  }\n}\n\nfunction notAddTile() {\n  const booleanArr = [];\n  const penultimateArr = arraysUpdatedBoard[arraysUpdatedBoard.length - 2];\n  const lastArr = arraysUpdatedBoard[arraysUpdatedBoard.length - 1];\n\n  for (let i = 0; i < penultimateArr.length; i++) {\n    booleanArr.push(penultimateArr[i] === lastArr[i]);\n  }\n\n  return booleanArr.every((arr) => arr);\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < ROWS; r++) {\n    for (let c = 0; c < COLUMNS; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction youWin() {\n  const arrayBoard = [];\n\n  for (let r = 0; r < ROWS; r++) {\n    for (let c = 0; c < COLUMNS; c++) {\n      arrayBoard.push(board[r][c]);\n    }\n  }\n\n  return arrayBoard.some((arr) => arr === 2048);\n}\n\nfunction youLose() {\n  let columnsStrLines = '';\n  const columnsLines = [];\n  const rowsLines = [...board];\n  let rowAndColumnLines = [];\n\n  for (let x = 0; x < ROWS; x++) {\n    for (let y = 0; y < COLUMNS; y++) {\n      columnsStrLines += ((rowsLines[y][x]) + '.');\n    }\n    columnsStrLines += ' ';\n  }\n\n  for (let i = 0; i < columnsStrLines.split(' ').length - 1; i++) {\n    columnsLines.push(\n      columnsStrLines.split(' ')[i].split('.')\n        .filter(ar => ar !== '')\n    );\n  }\n\n  rowAndColumnLines = [\n    ...rowsLines, ...columnsLines\n      .map((col) => col.map((c) => +c)),\n  ];\n\n  const newArr = rowAndColumnLines.map(\n    arr => arr.map((ar, i, array) => (array[i] !== array[i + 1]))\n      .slice(0, 3).every((ar) => ar)\n  );\n\n  return newArr.every(ar => ar) && !hasEmptyTile();\n}\n\nfunction doubleBoardsToSingleForComprassion() {\n  const arrayBoard = [];\n\n  for (let r = 0; r < ROWS; r++) {\n    for (let c = 0; c < COLUMNS; c++) {\n      arrayBoard.push(board[r][c]);\n    }\n  }\n\n  arraysUpdatedBoard = arraysUpdatedBoard\n    .filter((arr, i, array) => arr !== array[0]);\n  arraysUpdatedBoard = [...arraysUpdatedBoard, [...arrayBoard]];\n}\n"]}